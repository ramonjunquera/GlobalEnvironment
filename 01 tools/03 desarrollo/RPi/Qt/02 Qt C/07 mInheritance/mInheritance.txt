mInheritance

Novedades:
- Herencia múltiple. Derivación de varias clases base

Desarrollo:
  Crearemos dos clases base y una tercera que será derivada de las anteriores.
  Cuando se deriva una clase de más de una base, se combinan todos los métodos y variables de
  las bases.
  Shape
    La primera clase base será Shape que representa una forma geométrica.
    Mantiene en la sección protected un par de variables con las dimensiones.
    Tiene un constructor que asigna los parámetros a las variabloes protegidas.
  CostPaint
    Es una clase base sin constructor.
    No tiene variables.
    Sólo tiene un método que permite calcular el coste de pintar un área.
  Rect
    Es una clase derivada de Shape y CostPaint.
    Tiene un constructor similar al de Shape para guardar las dimensiones.
    Añade un método para calcular el área.
    Gracias a Shape, podemos guardar las dimensiones en el constructor.
    Gracias a que las variables de Shape son protecter, podemos definir un método para calcular su área.
    Gracias a CostPaint se le añade un mátodo para calcular el coste de pintar.

  La declaración de una clase con derivación múltiple es igual que la simple, pero las clases
  base se separarán con comas. Ej:
    class Rect : public Shape , public CostPaint