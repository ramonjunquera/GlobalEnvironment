Tema: Scripts
Fecha: 20220316
Autor: Ramón Junquera

Es el código de programa que gestiona el juego.
Se escribe en C#.
Es conveniente crear una estructura de carpetas para guardar los Scripts. Nos facilitará su
clasificación y búsqueda.

Conviene utilizar Visual Studio 2019 para su edición, por las ayudas contextuales que contiene.
Realmente no es Visual Studio el que finalmente compila. Sólo se utiliza como editor.
Al salvar el código, Unity HUB detecta los cambios y recompila automáticamente.

Es conveniente asignar el nombre correcto al Script desde el primer momento, puesto que no sólo
afecta al nombre del Script, sino a la clase que se describe en su interior.

Un Script se asocia a un objeto arrastrándolo sobre él. Queda disponible como un nuevo componente.

Todos los Script vienen con dos métodos por defecto:
- Start(). Se ejecutará una sóla vez cuando se cree el GameObject
- Update(). Se ejecutará en cada frame.
Si no vamos a utilizar alguno de los métodos por defecto, conviene borrarlo.

Nota:
Es conveniente evitar el uso de espacios en los nombres de los Scripts

Variables públicas
- Las variables que etiquetemos como públicas serán accesibles tanto desde otros Scripts como desde el UI,
  para lectura y escritura. Ej: public int a;
- Podemos asignarles un valor por defecto, que será sobreescrito por el posible valor que se le asigne por UI.
- Si queremos que la variable sea modificable desde el UI pero no desde otros Scripts la etiquetaremos como
  [SerializeField]. Ej: [SerializeField] float jumpForce;